@article{Arnold1998,
   author = {Frances H. Arnold},
   doi = {10.1038/nbt0798-617},
   issn = {10870156},
   issue = {7},
   journal = {Nature Biotechnology},
   keywords = {Agriculture,Bioinformatics,Biomedical Engineering/Biotechnology,Biomedicine,Biotechnology,Life Sciences,general},
   pages = {617-618},
   pmid = {9661188},
   publisher = {Nature Publishing Group},
   title = {When blind is better: Protein design by evolution},
   volume = {16},
   url = {https://www.nature.com/articles/nbt0798-617},
   year = {1998},
}

@article{Jackel2008,
   abstract = {While nature evolved polypeptides over billions of years, protein design by evolutionary mimicry is progressing at a far more rapid pace. The mutation, selection, and amplification steps of the evolutionary cycle may be imitated in the laboratory using existing proteins, or molecules created de novo from random sequence space, as starting templates. However, the astronomically large number of possible polypeptide sequences remains an obstacle to identifying and isolating functionally interesting variants. Intelligently designed libraries and improved search techniques are consequendy important for future advances. In this regard, combining experimental and computational methods holds particular promise for the creation of tailored protein receptors and catalysts for tasks unimagined by nature. Copyright © 2008 by Annual Reviews. All rights reserved.},
   author = {Christian Jäckel and Peter Kast and Donald Hilvert},
   doi = {10.1146/annurev.biophys.37.032807.125832},
   isbn = {9780824318376},
   issn = {1936122X},
   journal = {Annual Review of Biophysics},
   keywords = {Computational design,Enzymes,Molecular diversity,Random mutagenesis,Screening,Selection},
   month = {5},
   pages = {153-173},
   pmid = {18573077},
   publisher = {Annual Reviews},
   title = {Protein design by directed evolution},
   volume = {37},
   url = {https://www.annualreviews.org/doi/abs/10.1146/annurev.biophys.37.032807.125832},
   year = {2008},
}

@article{Huang2016,
   abstract = {There are 20(200) possible amino-acid sequences for a 200-residue protein, of which the natural evolutionary process has sampled only an infinitesimal subset. De novo protein design explores the full sequence space, guided by the physical principles that underlie protein folding. Computational methodology has advanced to the point that a wide range of structures can be designed from scratch with atomic-level accuracy. Almost all protein engineering so far has involved the modification of naturally occurring proteins; it should now be possible to design new functional proteins from the ground up to tackle current challenges in biomedicine and nanotechnology.},
   author = {Po-Ssu Huang and Scott E. Boyken and David Baker},
   doi = {10.1038/nature19946},
   isbn = {0028-0836},
   issn = {0028-0836},
   issue = {7620},
   journal = {Nature},
   keywords = {Chemical biology,Structural biology},
   month = {9},
   pages = {320-327},
   pmid = {27629638},
   publisher = {Nature Publishing Group},
   title = {The coming of age of de novo protein design},
   volume = {537},
   year = {2016},
}

@article{Pereira2021,
   abstract = {Protein design is the field of synthetic biology that aims at developing de novo custom-made proteins and peptides for specific applications. Despite exploring an ambitious goal, recent computational advances in both hardware and software technologies have paved the way to high-throughput screening and detailed design of novel folds and improved functionalities. Modern advances in the field of protein design for small molecule targeting are described in this review, organized in a step-by-step fashion: from the conception of a new or upgraded active binding site, to scaffold design, sequence optimization, and experimental expression of the custom protein. In each step, contemporary examples are described, and state-of-the-art software is briefly explored.},
   author = {José M. Pereira and Maria Vieira and Sérgio M. Santos},
   doi = {10.1002/pro.4098},
   isbn = {138820/2018},
   issn = {1469896X},
   issue = {8},
   journal = {Protein Science},
   keywords = {computational chemistry,de novo design,protein design,protein synthesis},
   month = {8},
   pages = {1502-1520},
   pmid = {33934427},
   publisher = {John Wiley & Sons, Ltd},
   title = {Step-by-step design of proteins for small molecule interaction: A review on recent milestones},
   volume = {30},
   url = {https://onlinelibrary.wiley.com/doi/full/10.1002/pro.4098 https://onlinelibrary.wiley.com/doi/abs/10.1002/pro.4098 https://onlinelibrary.wiley.com/doi/10.1002/pro.4098},
   year = {2021},
}

@article{Simons1999,
   abstract = {To generate structures consistent with both the local and nonlocal interactions responsible for protein stability, 3 and 9 residue fragments of known structures with local sequences similar to the target sequence were assembled into complete tertiary structures using a Monte Carlo simulated annealing procedure (Simons et al., J Mol Biol 1997; 268:209-225). The scoring function used in the simulated annealing procedure consists of sequence-dependent terms representing hydrophobic burial and specific pair interactions such as electrostatics and disulfide bonding and sequence-independent terms representing hard sphere packing, alpha-helix and beta-strand packing, and the collection of beta-strands in beta-sheets (Simons et al., Proteins 1999;34:82-95). For each of 21 small, ab initio targets, 1,200 final structures were constructed, each the result of 100,000 attempted fragment substitutions. The five structures submitted for the CASP III experiment were chosen from the approximately 25 structures with the lowest scores in the broadest minima (assessed through the number of structural neighbors; Shortle et al., Proc Natl Acad Sci USA 1998;95:1158-1162). The results were encouraging: highlights of the predictions include a 99-residue segment for MarA with an rmsd of 6.4 A to the native structure, a 95-residue (full length) prediction for the EH2 domain of EPS15 with an rmsd of 6.0 A, a 75-residue segment of DNAB helicase with an rmsd of 4.7 A, and a 67-residue segment of ribosomal protein L30 with an rmsd of 3.8 A. These results suggest that ab initio methods may soon become useful for low-resolution structure prediction for proteins that lack a close homologue of known structure.},
   author = {K. T. Simons and R. Bonneau and David Baker},
   journal = {Proteins},
   pages = {171-176},
   title = {Ab initio protein structure prediction of CASP III targets using ROSETTA},
   volume = {Suppl. 3},
   year = {1999},
}

@article{Kuhlman2003,
   abstract = {A major challenge of computational protein design is the creation of novel proteins with arbitrarily chosen three-dimensional structures. Here, we used a general computational strategy that iterates between sequence design and structure prediction to design a 93-residue α/β protein called Top7 with a novel sequence and topology. Top7 was found experimentally to be folded and extremely stable, and the x-ray crystal structure of Top7 is similar (root mean square deviation equals 1.2 angstroms) to the design model. The ability to design a new protein fold makes possible the exploration of the large regions of the protein universe not yet observed in nature.},
   author = {Brian Kuhlman and Gautam Dantas and Gregory C Ireton and Gabriele Varani and Barry L Stoddard and David Baker},
   doi = {10.1126/science.1089427},
   isbn = {0036-8075},
   issn = {00368075},
   issue = {5649},
   journal = {Science},
   month = {11},
   pages = {1364-1368},
   pmid = {14631033},
   publisher = {American Association for the Advancement of Science},
   title = {Design of a Novel Globular Protein Fold with Atomic-Level Accuracy},
   volume = {302},
   url = {http://www.ncbi.nlm.nih.gov/pubmed/14631033},
   year = {2003},
}

@article{Chaudhury2010,
   abstract = {PyRosetta is a stand-alone Python-based imple-mentation of the Rosetta molecular modeling package that allows users to write custom structure prediction and design algorithms using the major Rosetta sampling and scoring functions. PyRosetta contains Python bindings to libraries that define Rosetta functions including those for accessing and manipulating protein structure, calculating energies and running Monte Carlo-based simulations. PyRosetta can be used in two ways: (i) interactively, using iPython and (ii) script-based, using Python scripting. Interactive mode contains a number of help features and is ideal for beginners while script-mode is best suited for algorithm development. PyRosetta has similar computational performance to Rosetta, can be easily scaled up for cluster applications and has been implemented for algorithms demonstrating protein docking, protein folding, loop modeling and design. Availability: PyRosetta is a stand-alone package available at http://www.pyrosetta.org under the Rosetta license which is free for academic and non-profit users. A tutorial, user's manual and sample scripts demonstrating usage are also available on the web site. Contact: pyrosetta@graylab.jhu.edu © The Author 2010. Published by Oxford University Press.},
   author = {Sidhartha Chaudhury and Sergey Lyskov and Jeffrey J. Gray},
   doi = {10.1093/bioinformatics/btq007},
   issn = {13674803},
   issue = {5},
   journal = {Bioinformatics},
   month = {1},
   pages = {689-691},
   pmid = {20061306},
   publisher = {Oxford University Press},
   title = {PyRosetta: A script-based interface for implementing molecular modeling algorithms using Rosetta},
   volume = {26},
   url = {/pmc/articles/PMC2828115/ /pmc/articles/PMC2828115/?report=abstract https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2828115/},
   year = {2010},
}

@article{Leman2020,
   abstract = {The Rosetta software for macromolecular modeling, docking and design is extensively used in laboratories worldwide. During two decades of development by a community of laboratories at more than 60 institutions, Rosetta has been continuously refactored and extended. Its advantages are its performance and interoperability between broad modeling capabilities. Here we review tools developed in the last 5 years, including over 80 methods. We discuss improvements to the score function, user interfaces and usability. Rosetta is available at http://www.rosettacommons.org.},
   author = {Julia Koehler Leman and Brian D. Weitzner and Steven M. Lewis and Jared Adolf-Bryfogle and Nawsad Alam and Rebecca F. Alford and Melanie Aprahamian and David Baker and Kyle A. Barlow and Patrick Barth and Benjamin Basanta and Brian J. Bender and Kristin Blacklock and Jaume Bonet and Scott E. Boyken and Phil Bradley and Chris Bystroff and Patrick Conway and Seth Cooper and Bruno E. Correia and Brian Coventry and Rhiju Das and René M. De Jong and Frank DiMaio and Lorna Dsilva and Roland Dunbrack and Alexander S. Ford and Brandon Frenz and Darwin Y. Fu and Caleb Geniesse and Lukasz Goldschmidt and Ragul Gowthaman and Jeffrey J. Gray and Dominik Gront and Sharon Guffy and Scott Horowitz and Po Ssu Huang and Thomas Huber and Tim M. Jacobs and Jeliazko R. Jeliazkov and David K. Johnson and Kalli Kappel and John Karanicolas and Hamed Khakzad and Karen R. Khar and Sagar D. Khare and Firas Khatib and Alisa Khramushin and Indigo C. King and Robert Kleffner and Brian Koepnick and Tanja Kortemme and Georg Kuenze and Brian Kuhlman and Daisuke Kuroda and Jason W. Labonte and Jason K. Lai and Gideon Lapidoth and Andrew Leaver-Fay and Steffen Lindert and Thomas Linsky and Nir London and Joseph H. Lubin and Sergey Lyskov and Jack Maguire and Lars Malmström and Enrique Marcos and Orly Marcu and Nicholas A. Marze and Jens Meiler and Rocco Moretti and Vikram Khipple Mulligan and Santrupti Nerli and Christoffer Norn and Shane Ó’Conchúir and Noah Ollikainen and Sergey Ovchinnikov and Michael S. Pacella and Xingjie Pan and Hahnbeom Park and Ryan E. Pavlovicz and Manasi Pethe and Brian G. Pierce and Kala Bharath Pilla and Barak Raveh and P. Douglas Renfrew and Shourya S.Roy Burman and Aliza Rubenstein and Marion F. Sauer and Andreas Scheck and William Schief and Ora Schueler-Furman and Yuval Sedan and Alexander M. Sevy and Nikolaos G. Sgourakis and Lei Shi and Justin B. Siegel and Daniel Adriano Silva and Shannon Smith and Yifan Song and Amelie Stein and Maria Szegedy and Frank D. Teets and Summer B. Thyme and Ray Yu Ruei Wang and Andrew Watkins and Lior Zimmerman and Richard Bonneau},
   doi = {10.1038/s41592-020-0848-2},
   issn = {15487105},
   issue = {7},
   journal = {Nature Methods},
   month = {7},
   pages = {665-680},
   pmid = {32483333},
   publisher = {Nature Research},
   title = {Macromolecular modeling and design in Rosetta: recent methods and frameworks},
   volume = {17},
   year = {2020},
}

@article{Senior2020,
   abstract = {Protein structure prediction can be used to determine the three-dimensional shape of a protein from its amino acid sequence1. This problem is of fundamental importance as the structure of a protein largely determines its function2; however, protein structures can be difficult to determine experimentally. Considerable progress has recently been made by leveraging genetic information. It is possible to infer which amino acid residues are in contact by analysing covariation in homologous sequences, which aids in the prediction of protein structures3. Here we show that we can train a neural network to make accurate predictions of the distances between pairs of residues, which convey more information about the structure than contact predictions. Using this information, we construct a potential of mean force4 that can accurately describe the shape of a protein. We find that the resulting potential can be optimized by a simple gradient descent algorithm to generate structures without complex sampling procedures. The resulting system, named AlphaFold, achieves high accuracy, even for sequences with fewer homologous sequences. In the recent Critical Assessment of Protein Structure Prediction5 (CASP13)—a blind assessment of the state of the field—AlphaFold created high-accuracy structures (with template modelling (TM) scores6 of 0.7 or higher) for 24 out of 43 free modelling domains, whereas the next best method, which used sampling and contact information, achieved such accuracy for only 14 out of 43 domains. AlphaFold represents a considerable advance in protein-structure prediction. We expect this increased accuracy to enable insights into the function and malfunction of proteins, especially in cases for which no structures for homologous proteins have been experimentally determined7.},
   author = {Andrew W Senior and Richard Evans and John Jumper and James Kirkpatrick and Laurent Sifre and Tim Green and Chongli Qin and Augustin Žídek and Alexander W.R. Nelson and Alex Bridgland and Hugo Penedones and Stig Petersen and Karen Simonyan and Steve Crossan and Pushmeet Kohli and David T Jones and David Silver and Koray Kavukcuoglu and Demis Hassabis},
   doi = {10.1038/s41586-019-1923-7},
   issn = {14764687},
   issue = {7792},
   journal = {Nature},
   pages = {706-710},
   pmid = {31942072},
   title = {Improved protein structure prediction using potentials from deep learning},
   volume = {577},
   url = {http://predictioncenter.org/casp13/zscores_final.cgi?formula=},
   year = {2020},
}

@article{Tunyasuvunakool2021,
   abstract = {Protein structures can provide invaluable information, both for reasoning about biological processes and for enabling interventions such as structure-based drug development or targeted mutagenesis. After decades of effort, 17% of the total residues in human protein sequences are covered by an experimentally determined structure1. Here we markedly expand the structural coverage of the proteome by applying the state-of-the-art machine learning method, AlphaFold2, at a scale that covers almost the entire human proteome (98.5% of human proteins). The resulting dataset covers 58% of residues with a confident prediction, of which a subset (36% of all residues) have very high confidence. We introduce several metrics developed by building on the AlphaFold model and use them to interpret the dataset, identifying strong multi-domain predictions as well as regions that are likely to be disordered. Finally, we provide some case studies to illustrate how high-quality predictions could be used to generate biological hypotheses. We are making our predictions freely available to the community and anticipate that routine large-scale and high-accuracy structure prediction will become an important tool that will allow new questions to be addressed from a structural perspective. AlphaFold is used to predict the structures of almost all of the proteins in the human proteome—the availability of high-confidence predicted structures could enable new avenues of investigation from a structural perspective.},
   author = {Kathryn Tunyasuvunakool and Jonas Adler and Zachary Wu and Tim Green and Michal Zielinski and Augustin Žídek and Alex Bridgland and Andrew Cowie and Clemens Meyer and Agata Laydon and Sameer Velankar and Gerard J. Kleywegt and Alex Bateman and Richard Evans and Alexander Pritzel and Michael Figurnov and Olaf Ronneberger and Russ Bates and Simon A.A. Kohl and Anna Potapenko and Andrew J. Ballard and Bernardino Romera-Paredes and Stanislav Nikolov and Rishub Jain and Ellen Clancy and David Reiman and Stig Petersen and Andrew W. Senior and Koray Kavukcuoglu and Ewan Birney and Pushmeet Kohli and John Jumper and Demis Hassabis},
   doi = {10.1038/s41586-021-03828-1},
   issn = {1476-4687},
   issue = {7873},
   journal = {Nature 2021 596:7873},
   keywords = {Machine learning,Protein structure predictions,Proteomic analysis,Structural biology},
   month = {7},
   pages = {590-596},
   pmid = {34293799},
   publisher = {Nature Publishing Group},
   title = {Highly accurate protein structure prediction for the human proteome},
   volume = {596},
   url = {https://www.nature.com/articles/s41586-021-03828-1},
   year = {2021},
}

@article{Jumper2021,
   abstract = {Proteins are essential to life, and understanding their structure can facilitate a mechanistic understanding of their function. Through an enormous experimental effort1–4, the structures of around 100,000 unique proteins have been determined5, but this represents a small fraction of the billions of known protein sequences6,7. Structural coverage is bottlenecked by the months to years of painstaking effort required to determine a single protein structure. Accurate computational approaches are needed to address this gap and to enable large-scale structural bioinformatics. Predicting the three-dimensional structure that a protein will adopt based solely on its amino acid sequence—the structure prediction component of the ‘protein folding problem’8—has been an important open research problem for more than 50 years9. Despite recent progress10–14, existing methods fall far short of atomic accuracy, especially when no homologous structure is available. Here we provide the first computational method that can regularly predict protein structures with atomic accuracy even in cases in which no similar structure is known. We validated an entirely redesigned version of our neural network-based model, AlphaFold, in the challenging 14th Critical Assessment of protein Structure Prediction (CASP14)15, demonstrating accuracy competitive with experimental structures in a majority of cases and greatly outperforming other methods. Underpinning the latest version of AlphaFold is a novel machine learning approach that incorporates physical and biological knowledge about protein structure, leveraging multi-sequence alignments, into the design of the deep learning algorithm. AlphaFold predicts protein structures with an accuracy competitive with experimental structures in the majority of cases using a novel deep learning architecture.},
   author = {John Jumper and Richard Evans and Alexander Pritzel and Tim Green and Michael Figurnov and Olaf Ronneberger and Kathryn Tunyasuvunakool and Russ Bates and Augustin Žídek and Anna Potapenko and Alex Bridgland and Clemens Meyer and Simon A.A. Kohl and Andrew J. Ballard and Andrew Cowie and Bernardino Romera-Paredes and Stanislav Nikolov and Rishub Jain and Jonas Adler and Trevor Back and Stig Petersen and David Reiman and Ellen Clancy and Michal Zielinski and Martin Steinegger and Michalina Pacholska and Tamas Berghammer and Sebastian Bodenstein and David Silver and Oriol Vinyals and Andrew W. Senior and Koray Kavukcuoglu and Pushmeet Kohli and Demis Hassabis},
   doi = {10.1038/s41586-021-03819-2},
   issn = {1476-4687},
   issue = {7873},
   journal = {Nature 2021 596:7873},
   keywords = {Computational biophysics,Machine learning,Protein structure predictions,Structural biology},
   month = {7},
   pages = {583-589},
   pmid = {34265844},
   publisher = {Nature Publishing Group},
   title = {Highly accurate protein structure prediction with AlphaFold},
   volume = {596},
   url = {https://www.nature.com/articles/s41586-021-03819-2},
   year = {2021},
}

@article{Yang2020,
   abstract = {The prediction of interresidue contacts and distances from coevolutionary data using deep learning has considerably advanced protein structure prediction. Here, we build on these advances by developing a deep residual network for predicting interresidue orientations, in addition to distances, and a Rosetta-constrained energy-minimization protocol for rapidly and accurately generating structure models guided by these restraints. In benchmark tests on 13th Community-Wide Experiment on the Critical Assessment of Techniques for Protein Structure Prediction (CASP13)- and Continuous Automated Model Evaluation (CAMEO)-derived sets, the method outperforms all previously described structureprediction methods. Although trained entirely on native proteins, the network consistently assigns higher probability to de novodesigned proteins, identifying the key fold-determining residues and providing an independent quantitative measure of the "ideality" of a protein structure. The method promises to be useful for a broad range of protein structure prediction and design problems.},
   author = {Jianyi Yang and Ivan Anishchenko and Hahnbeom Park and Zhenling Peng and Sergey Ovchinnikov and David Baker},
   doi = {10.1073/pnas.1914677117},
   issn = {10916490},
   issue = {3},
   journal = {Proceedings of the National Academy of Sciences of the United States of America},
   keywords = {Deep learning,Protein contact prediction,Protein structure prediction},
   month = {11},
   pages = {1496-1503},
   pmid = {31896580},
   publisher = {Cold Spring Harbor Laboratory},
   title = {Improved protein structure prediction using predicted interresidue orientations},
   volume = {117},
   year = {2020},
}

@article{Goddard2018,
   abstract = {UCSF ChimeraX is next-generation software for the visualization and analysis of molecular structures, density maps, 3D microscopy, and associated data. It addresses challenges in the size, scope, and disparate types of data attendant with cutting-edge experimental methods, while providing advanced options for high-quality rendering (interactive ambient occlusion, reliable molecular surface calculations, etc.) and professional approaches to software design and distribution. This article highlights some specific advances in the areas of visualization and usability, performance, and extensibility. ChimeraX is free for noncommercial use and is available from http://www.rbvi.ucsf.edu/chimerax/ for Windows, Mac, and Linux.},
   author = {Thomas D. Goddard and Conrad C. Huang and Elaine C. Meng and Eric F. Pettersen and Gregory S. Couch and John H. Morris and Thomas E. Ferrin},
   doi = {10.1002/pro.3235},
   issn = {1469896X},
   issue = {1},
   journal = {Protein Science},
   keywords = {biomolecular visualization and analysis,density maps,integrative hybrid modeling,interactive molecular graphics,large-scale data,light-sheet microscopy,structural biology,virtual reality},
   month = {1},
   pages = {14-25},
   pmid = {28710774},
   publisher = {John Wiley & Sons, Ltd},
   title = {UCSF ChimeraX: Meeting modern challenges in visualization and analysis},
   volume = {27},
   url = {https://onlinelibrary.wiley.com/doi/full/10.1002/pro.3235 https://onlinelibrary.wiley.com/doi/abs/10.1002/pro.3235 https://onlinelibrary.wiley.com/doi/10.1002/pro.3235},
   year = {2018},
}

@article{Samish2017,
   abstract = {Computational protein design (CPD), a yet evolving field, includes computer-aided engineering for partial or full de novo designs of proteins of interest. Designs are defined by a requested structure, function, or working environment. This chapter describes the birth andmaturation of the field by presenting 101 CPD examples in a chronological order emphasizing achievements and pending challenges. Integrating these aspects presents the plethora of CPD approaches with the hope of providing a “CPD 101”. These reflect on the broader structural bioinformatics and computational biophysics field and include: (1) integration of knowledge-based and energy-based methods, (2) hierarchical designated approach towards local, regional, and global motifs and the integration of high- and low-resolution design schemes that fit each such region, (3) systematic differential approaches towards different protein regions, (4) identification of key hot-spot residues and the relative effect of remote regions, (5) assessment of shape-complementarity, electrostatics and solvation effects, (6) integration of thermal plasticity and functional dynamics, (7) negative design, (8) systematic integration of experimental approaches, (9) objective cross-assessment of methods, and (10) successful ranking of potential designs. Future challenges also include dissemination of CPD software to the general use of life-sciences researchers and the emphasis of success within an in vivo milieu. CPD increases our understanding of protein structure and function and the relationships between the two along with the application of such know-how for the benefit ofmankind. Applied aspects range frombiological drugs, via healthier and tastier food products to nanotechnology and environmentally friendly enzymes replacing toxic chemicals utilized in the industry.},
   author = {Ilan Samish},
   doi = {10.1007/978-1-4939-6637-0_2},
   issn = {10643745},
   journal = {Methods in Molecular Biology},
   keywords = {Computational protein design,De novo design,Directed evolution,Enzyme design,Inverse folding problem,Negative design,Protein–protein interaction,Rational design,Synthetic biology},
   pages = {21-94},
   pmid = {27914045},
   publisher = {Humana Press Inc.},
   title = {Achievements and challenges in computational protein design},
   volume = {1529},
   year = {2017},
}

@article{Sarhan2019,
   abstract = {Writing good software is not an easy task, it requires a lot of coding experience and skills. Therefore, inexperienced software developers or newbies suffer from this critical task. In this paper, we provide guidelines to help in this important context. It presents the most important best practices and recommendations of writing good software from software engineering perspective regardless of the software domain (whether for desktop, mobile, web, or embedded), software size, and software complexity. The best practices provided in this paper are organized in taxonomy of many categories to ease the process of considering them while developing software. Furthermore, many useful, practical, and actionable recommendations are given mostly in each category to be considered by software developers},
   author = {Qusay Idrees Sarhan},
   doi = {10.26682/sjuod.2019.22.1.11},
   issn = {18127568},
   issue = {1},
   journal = {The Journal of the University of Duhok},
   month = {11},
   pages = {90-105},
   title = {Best Practices And Recommendations for Writing Good Software},
   volume = {22},
   url = {http://journal.uod.ac/index.php/uodjournal/article/view/413},
   year = {2019},
}

@article{Fleishman2011,
   abstract = {Macromolecular modeling and design are increasingly useful in basic research, biotechnology, and teaching. However, the absence of a user-friendly modeling framework that provides access to a wide range of modeling capabilities is hampering the wider adoption of computational methods by non-experts. RosettaScripts is an XML-like language for specifying modeling tasks in the Rosetta framework. RosettaScripts provides access to protocol-level functionalities, such as rigid-body docking and sequence redesign, and allows fast testing and deployment of complex protocols without need for modifying or recompiling the underlying C++ code. We illustrate these capabilities with RosettaScripts protocols for the stabilization of proteins, the generation of computationally constrained libraries for experimental selection of higher-affinity binding proteins, loop remodeling, small-molecule ligand docking, design of ligand-binding proteins, and specificity redesign in DNA-binding proteins. © 2011 Fleishman et al.},
   author = {Sarel J. Fleishman and Andrew Leaver-Fay and Jacob E. Corn and Eva Maria Strauch and Sagar D. Khare and Nobuyasu Koga and Justin Ashworth and Paul Murphy and Florian Richter and Gordon Lemmon and Jens Meiler and David Baker},
   doi = {10.1371/journal.pone.0020161},
   issn = {19326203},
   issue = {6},
   journal = {PLoS ONE},
   pmid = {21731610},
   title = {Rosettascripts: A scripting language interface to the Rosetta Macromolecular modeling suite},
   volume = {6},
   year = {2011},
}

@article{Chowdry2007,
   abstract = {Recent advances in computational protein design have established it as a viable technique for the rational generation of stable protein sequences, novel protein folds, and even enzymatic activity. We present a new and object-oriented library of code, written specifically for protein design applications in C ++, called EGAD Library. The modular fashion in which this library is written allows developers to tailor various energy functions and minimizers for a specific purpose. It also allows for the generation of novel protein design applications with a minimal amount of code investment. It is our hope that this will permit labs that have not considered protein design to apply it to their own systems, thereby increasing its potential as a tool in biology. We also present various uses of EGAD Library: in the development of Interaction Viewer, a PyMOL plug-in for viewing interactions between protein residues; in the repacking of protein cores; and in the prediction of protein-protein complex stabilities. © 2007 Wiley Periodicals, Inc.},
   author = {Arnab B. Chowdry and Kimberly A. Reynolds and Melinda S. Hanes and Mark Voorhies and Navin Pokala and Tracy M. Handel},
   doi = {10.1002/jcc.20727},
   issn = {01928651},
   issue = {14},
   journal = {Journal of Computational Chemistry},
   keywords = {Computational protein design,Object-oriented programming,Protein stability,Protein-protein interactions},
   month = {11},
   pages = {2378-2388},
   pmid = {17471459},
   publisher = {J Comput Chem},
   title = {An object-oriented library for computational protein design},
   volume = {28},
   url = {https://pubmed.ncbi.nlm.nih.gov/17471459/},
   year = {2007},
}

@article{Bezanson2017,
   abstract = {Bridging cultures that have often been distant, Julia combines expertise from the diverse helds of computer science and computational science to create a new approach to numerical computing. Julia is designed to be easy and fast and questions notions generally held to be "laws of nature" by practitioners of numerical computing: 1. High-level dynamic programs have to be slow. 2. One must prototype in one language and then rewrite in another language for speed or deployment. 3. There are parts of a system appropriate for the programmer, and other parts that are best left untouched as they have been built by the experts. We introduce the Julia programming language and its design-a dance between specialization and abstraction. Specialization allows for custom treatment. Multiple dispatch, a technique from computer science, picks the right algorithm for the right circumstance. Abstraction, which is what good computation is really about, recognizes what remains the same after differences are stripped away. Abstractions in mathematics are captured as code through another technique from computer science, generic programming. Julia shows that one can achieve machine performance without sacrificing human convenience.},
   author = {Jeff Bezanson and Alan Edelman and Stefan Karpinski and Viral B. Shah},
   doi = {10.1137/141000671},
   issn = {00361445},
   issue = {1},
   journal = {SIAM Review},
   keywords = {Julia,Numerical,Parallel,Scientific computing},
   month = {1},
   pages = {65-98},
   publisher = {Society for Industrial and Applied Mathematics},
   title = {Julia: A fresh approach to numerical computing},
   volume = {59},
   url = {https://epubs.siam.org/doi/10.1137/141000671},
   year = {2017},
}

@article{Bezanson2018,
   abstract = {Julia is a programming language for the scientific community that combines features of productivity languages, such as Python or MATLAB, with characteristics of performance-oriented languages, such as C++ or Fortran. Julia's productivity features include: dynamic typing, automatic memory management, rich type annotations, and multiple dispatch. At the same time, Julia allows programmers to control memory layout and leverages a specializing just-in-time compiler to eliminate much of the overhead of those features. This paper details the design choices made by the creators of Julia and reflects on the implications of those choices for performance and usability.},
   author = {Jeff Bezanson and Jiahao Chen and Benjamin Chung and Stefan Karpinski and Viral B. Shah and Jan Vitek and Lionel Zoubritzky},
   doi = {10.1145/3276490},
   issn = {2475-1421},
   issue = {OOPSLA},
   journal = {Proceedings of the ACM on Programming Languages},
   month = {10},
   pages = {1-23},
   publisher = {Association for Computing Machinery (ACM)},
   title = {Julia: dynamism and performance reconciled by design},
   volume = {2},
   url = {http://dl.acm.org/citation.cfm?doid=3288538.3276490},
   year = {2018},
}

@book_section{Prusinkiewicz1990,
   abstract = {Lindenmayer systems — or L-systems for short — were conceived as a mathematical theory of plant development [82]. Originally, they did not include enough detail to allow for comprehensive modeling of higher plants. The emphasis was on plant topology, that is, the neighborhood relations between cells or larger plant modules. Their geometric aspects were beyond the scope of the theory. Subsequently, several geometric interpretations of L-systems were proposed with a view to turning them into a versatile tool for plant modeling. Throughout this book, an interpretation based on turtle geometry is used [109]. Basic notions related to L-system theory and their turtle interpretation are presented below.},
   author = {Przemyslaw Prusinkiewicz and Aristid Lindenmayer},
   doi = {10.1007/978-1-4613-8476-2_1},
   pages = {1-50},
   publisher = {Springer, New York, NY},
   title = {Graphical modeling using L-systems},
   url = {https://link.springer.com/chapter/10.1007/978-1-4613-8476-2_1},
   year = {1990},
}


@article{Gang2021,
   abstract = {The incorporation of noncanonical amino acids (ncAAs) has been extensively studied because of its broad applicability. In the past decades, various in vitro and in vivo ncAA incorporation approaches have been developed to generate synthetic recombinant proteins. Herein, we discuss the methodologies for ncAA incorporation, and their use in diverse research areas, such as in synthetic biosafety and for studies of post-translational modifications.},
   author = {Donghyeok Gang and Hee sung Park},
   doi = {10.1002/CBIC.202000437},
   issn = {1439-7633},
   issue = {3},
   journal = {ChemBioChem},
   keywords = {noncanonical amino acids,post,synthetic biosafety,translational modifications},
   month = {2},
   pages = {460-468},
   pmid = {32794239},
   publisher = {John Wiley & Sons, Ltd},
   title = {Noncanonical Amino Acids in Synthetic Biosafety and Post-translational Modification Studies},
   volume = {22},
   url = {https://onlinelibrary.wiley.com/doi/full/10.1002/cbic.202000437 https://onlinelibrary.wiley.com/doi/abs/10.1002/cbic.202000437 https://chemistry-europe.onlinelibrary.wiley.com/doi/10.1002/cbic.202000437},
   year = {2021},
}

@article{Nagata2014,
   abstract = {Motivation: Accurately predicting protein side-chain conformations is an important subproblem of the broader protein structure prediction problem. Several methods exist for generating fairly accurate models for moderate-size proteins in seconds or less. However, a major limitation of these methods is their inability to model post-translational modifications (PTMs) and unnatural amino acids. In natural living systems, the chemical groups added following translation are often critical for the function of the protein. In engineered systems, unnatural amino acids are incorporated into proteins to explore structure-function relationships and create novel proteins. Results: We present a new version of SIDEpro to predict the side chains of proteins containing non-standard amino acids, including 15 of the most frequently observed PTMs in the Protein Data Bank and all types of phosphorylation. SIDEpro uses energy functions that are parameterized by neural networks trained from available data. For PTMs, the and accuracies are comparable with those obtained for the precursor amino acid, and so are the RMSD values for the atoms shared with the precursor amino acid. In addition, SIDEpro can accommodate any PTM or unnatural amino acid, thus providing a flexible prediction system for high-throughput modeling of proteins beyond the standard amino acids. © 2014 The Author. Published by Oxford University Press. All rights reserved.},
   author = {Ken Nagata and Arlo Randall and Pierre Baldi},
   doi = {10.1093/BIOINFORMATICS/BTU106},
   issn = {14602059},
   issue = {12},
   journal = {Bioinformatics},
   month = {6},
   pages = {1681-1689},
   pmid = {24574112},
   publisher = {Oxford University Press},
   title = {Incorporating post-translational modifications and unnatural amino acids into high-throughput modeling of protein structures},
   volume = {30},
   year = {2014},
}

@article{Zappa2018,
   abstract = {Programming languages that support multiple dispatch rely on an expressive notion of subtyping to specify method applicability. In these languages, type annotations on method declarations are used to select, out of a potentially large set of methods, the one that is most appropriate for a particular tuple of arguments. Julia is a language for scientific computing built around multiple dispatch and an expressive subtyping relation. This paper provides the first formal definition of Julia's subtype relation and motivates its design. We validate our specification empirically with an implementation of our definition that we compare against the existing Julia implementation on a collection of real-world programs. Our subtype implementation differs on 122 subtype tests out of 6,014,476. The first 120 differences are due to a bug in Julia that was fixed once reported; the remaining 2 are under discussion.},
   author = {Francesco Zappa Nardelli and Julia Belyakova and Artem Pelenitsyn and Benjamin Chung and Jeff Bezanson and Jan Vitek},
   doi = {10.1145/3276483},
   issn = {24751421},
   issue = {OOPSLA},
   journal = {Proceedings of the ACM on Programming Languages},
   month = {10},
   pages = {1-27},
   publisher = {Association for Computing Machinery (ACM)},
   title = {Julia subtyping: a rational reconstruction},
   volume = {2},
   url = {http://dl.acm.org/citation.cfm?doid=3288538.3276483},
   year = {2018},
}

@article{Walsh1999,
   abstract = {Although de novo protein design is an important endeavor with implications for understanding protein folding, until now, structures have been determined for only a few 25- to 30-residue designed miniproteins. Here, the NMR solution structure of a complex 73-residue three-helix bundle protein, α3D, is reported. The structure of α3D was not based on any natural protein, and yet it shows thermodynamic and spectroscopic properties typical of native proteins. A variety of features contribute to its unique structure, including electrostatics, the packing of a diverse set of hydrophobic side chains, and a loop that incorporates common cupping motifs. Thus, it is now possible to design a complex protein with a well defined and predictable three-dimensional structure.},
   author = {Scott T.R. Walsh and Hong Cheng and James W. Bryson and Heinrich Roder and William F. Degrado},
   doi = {10.1073/pnas.96.10.5486},
   issn = {00278424},
   issue = {10},
   journal = {Proceedings of the National Academy of Sciences of the United States of America},
   month = {5},
   pages = {5486-5491},
   pmid = {10318910},
   publisher = {National Academy of Sciences},
   title = {Solution structure and dynamics of a de novo designed three-helix bundle protein},
   volume = {96},
   url = {https://www.pnas.org/content/96/10/5486 https://www.pnas.org/content/96/10/5486.abstract},
   year = {1999},
}
